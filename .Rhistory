isretweet=isretweet1,retweeted=retweeted1, retweetcount=retweetcount1,favoritecount=favoritecount1,favorited=favorited1))
# Create corpus
DE1Tweet=sapply(list1, function(x) x$getText())
list1 <- searchTwitter(searchString = "#netDE",n=1500, since = '2016-05-10', until= '2016-05-11')
DE1Tweet=sapply(list1, function(x) x$getText())
DE1date=lapply(list1, function(x) x$getCreated())
DE1date=sapply(DE1date,function(x) strftime(x, format="%Y-%m-%d %H:%M:%S",tz = "UTC"))
isretweet1=sapply(list1, function(x) x$getIsRetweet())
retweeted1=sapply(list1, function(x) x$getRetweeted())
retweetcount1=sapply(list1, function(x) x$getRetweetCount())
favoritecount1=sapply(list1, function(x) x$getFavoriteCount())
favorited1=sapply(list1, function(x) x$getFavorited())
data=as.data.frame(cbind(tweet=DE1Tweet,date=DE1date,
isretweet=isretweet1,retweeted=retweeted1, retweetcount=retweetcount1,favoritecount=favoritecount1,favorited=favorited1))
# Create corpus
corpus=Corpus(VectorSource(data$tweet))
corpus=tm_map(corpus,tolower)
corpus=tm_map(corpus,function(x) removeWords(x,stopwords()))
corpus=tm_map(corpus,PlainTextDocument)
col=brewer.pal(6,"Dark2")
wordcloud(corpus, min.freq=10, scale=c(5,2),rot.per = 0.25,
random.color=T, max.word=45, random.order=F,colors=col)
tweet=data$tweet
tweet_list=lapply(tweet, function(x) iconv(x, "latin1", "ASCII", sub=""))
tweet_list=lapply(tweet_list, function(x) gsub("htt.*",' ',x))
tweet=unlist(tweet_list)
data$tweet=tweet
positives= readLines("positive-words.txt")
negatives = readLines("negative-words.txt")
setwd("~/Desktop/NetDE-Twitter")
positives= readLines("positive-words.txt")
negatives = readLines("negative-words.txt")
sentiment_scores = function(tweets, positive_words, negative_words, .progress='none'){
scores = laply(tweets,
function(tweet, positive_words, negative_words){
tweet = gsub("[[:punct:]]", "", tweet)    # remove punctuation
tweet = gsub("[[:cntrl:]]", "", tweet)   # remove control characters
tweet = gsub('\\d+', '', tweet)          # remove digits
# Let's have error handling function when trying tolower
tryTolower = function(x){
# create missing value
y = NA
# tryCatch error
try_error = tryCatch(tolower(x), error=function(e) e)
# if not an error
if (!inherits(try_error, "error"))
y = tolower(x)
# result
return(y)
}
# use tryTolower with sapply
tweet = sapply(tweet, tryTolower)
# split sentence into words with str_split function from stringr package
word_list = str_split(tweet, "\\s+")
words = unlist(word_list)
# compare words to the dictionaries of positive & negative terms
positive_matches = match(words, positive_words)
negative_matches = match(words, negative_words)
# get the position of the matched term or NA
# we just want a TRUE/FALSE
positive_matches = !is.na(positive_matches)
negative_matches = !is.na(negative_matches)
# final score
score = sum(positive_matches) - sum(negative_matches)
return(score)
}, positive_matches, negative_matches, .progress=.progress )
return(scores)
}
score = sentiment_scores(tweet, positives, negatives, .progress='text')
?match
??match
install.packages(stringr)
install.packages("stringr")
install.packages("stringr")
require(stringr)
require(RCurl)
sentiment_scores = function(tweets, positive_words, negative_words, .progress='none'){
scores = laply(tweets,
function(tweet, positive_words, negative_words){
tweet = gsub("[[:punct:]]", "", tweet)    # remove punctuation
tweet = gsub("[[:cntrl:]]", "", tweet)   # remove control characters
tweet = gsub('\\d+', '', tweet)          # remove digits
# Let's have error handling function when trying tolower
tryTolower = function(x){
# create missing value
y = NA
# tryCatch error
try_error = tryCatch(tolower(x), error=function(e) e)
# if not an error
if (!inherits(try_error, "error"))
y = tolower(x)
# result
return(y)
}
# use tryTolower with sapply
tweet = sapply(tweet, tryTolower)
# split sentence into words with str_split function from stringr package
word_list = str_split(tweet, "\\s+")
words = unlist(word_list)
# compare words to the dictionaries of positive & negative terms
positive_matches = match(words, positive_words)
negative_matches = match(words, negative_words)
# get the position of the matched term or NA
# we just want a TRUE/FALSE
positive_matches = !is.na(positive_matches)
negative_matches = !is.na(negative_matches)
# final score
score = sum(positive_matches) - sum(negative_matches)
return(score)
}, positive_matches, negative_matches, .progress=.progress )
return(scores)
}
score = sentiment_scores(tweet, positives, negatives, .progress='text')
score = sentiment_scores(tweet, positives, negatives, .progress='text')
sentiment_scores = function(tweets, positive_words, negative_words, .progress='none'){
scores = lapply(tweets,
function(tweet, positive_words, negative_words){
tweet = gsub("[[:punct:]]", "", tweet)    # remove punctuation
tweet = gsub("[[:cntrl:]]", "", tweet)   # remove control characters
tweet = gsub('\\d+', '', tweet)          # remove digits
# Let's have error handling function when trying tolower
tryTolower = function(x){
# create missing value
y = NA
# tryCatch error
try_error = tryCatch(tolower(x), error=function(e) e)
# if not an error
if (!inherits(try_error, "error"))
y = tolower(x)
# result
return(y)
}
# use tryTolower with sapply
tweet = sapply(tweet, tryTolower)
# split sentence into words with str_split function from stringr package
word_list = str_split(tweet, "\\s+")
words = unlist(word_list)
# compare words to the dictionaries of positive & negative terms
positive_matches = match(words, positive_words)
negative_matches = match(words, negative_words)
# get the position of the matched term or NA
# we just want a TRUE/FALSE
positive_matches = !is.na(positive_matches)
negative_matches = !is.na(negative_matches)
# final score
score = sum(positive_matches) - sum(negative_matches)
return(score)
}, positive_matches, negative_matches, .progress=.progress )
return(scores)
}
score = sentiment_scores(tweet, positives, negatives, .progress='text')
score = sentiment_scores(tweet, positives, negatives)
sentiment_scores = function(tweets, positive_words, negative_words){
scores = lapply(tweets,
function(tweet, positive_words, negative_words){
tweet = gsub("[[:punct:]]", "", tweet)    # remove punctuation
tweet = gsub("[[:cntrl:]]", "", tweet)   # remove control characters
tweet = gsub('\\d+', '', tweet)          # remove digits
# Let's have error handling function when trying tolower
tryTolower = function(x){
# create missing value
y = NA
# tryCatch error
try_error = tryCatch(tolower(x), error=function(e) e)
# if not an error
if (!inherits(try_error, "error"))
y = tolower(x)
# result
return(y)
}
# use tryTolower with sapply
tweet = sapply(tweet, tryTolower)
# split sentence into words with str_split function from stringr package
word_list = str_split(tweet, "\\s+")
words = unlist(word_list)
# compare words to the dictionaries of positive & negative terms
positive_matches = match(words, positive_words)
negative_matches = match(words, negative_words)
# get the position of the matched term or NA
# we just want a TRUE/FALSE
positive_matches = !is.na(positive_matches)
negative_matches = !is.na(negative_matches)
# final score
score = sum(positive_matches) - sum(negative_matches)
return(score)
}, positive_matches, negative_matches)
return(scores)
}
score = sentiment_scores(tweet, positives, negatives)
sentiment_scores = function(tweets, positive_words, negative_words){
scores = lapply(tweets,
function(tweet, positive_words, negative_words){
tweet = gsub("[[:punct:]]", "", tweet)    # remove punctuation
tweet = gsub("[[:cntrl:]]", "", tweet)   # remove control characters
tweet = gsub('\\d+', '', tweet)          # remove digits
# Let's have error handling function when trying tolower
tryTolower = function(x){
# create missing value
y = NA
# tryCatch error
try_error = tryCatch(tolower(x), error=function(e) e)
# if not an error
if (!inherits(try_error, "error"))
y = tolower(x)
# result
return(y)
}
# use tryTolower with sapply
tweet = sapply(tweet, tryTolower)
# split sentence into words with str_split function from stringr package
word_list = str_split(tweet, "\\s+")
words = unlist(word_list)
# compare words to the dictionaries of positive & negative terms
positive_matches = match(words, positive_words)
negative_matches = match(words, negative_words)
# get the position of the matched term or NA
# we just want a TRUE/FALSE
positive_matches = !is.na(positive_matches)
negative_matches = !is.na(negative_matches)
# final score
score = sum(positive_matches) - sum(negative_matches)
return(score)
})
return(scores)
}
score = sentiment_scores(tweet, positives, negatives)
sentiment_scores = function(tweets, positive_words, negative_words){
scores = lapply(tweets,
function(tweet, positive_words, negative_words){
tweet = gsub("[[:punct:]]", "", tweet)    # remove punctuation
tweet = gsub("[[:cntrl:]]", "", tweet)   # remove control characters
tweet = gsub('\\d+', '', tweet)          # remove digits
# Let's have error handling function when trying tolower
tryTolower = function(x){
# create missing value
y = NA
# tryCatch error
try_error = tryCatch(tolower(x), error=function(e) e)
# if not an error
if (!inherits(try_error, "error"))
y = tolower(x)
# result
return(y)
}
# use tryTolower with sapply
tweet = sapply(tweet, tryTolower)
# split sentence into words with str_split function from stringr package
word_list = str_split(tweet, "\\s+")
words = unlist(word_list)
# compare words to the dictionaries of positive & negative terms
positive_matches = match(words, positive_words)
negative_matches = match(words, negative_words)
# get the position of the matched term or NA
# we just want a TRUE/FALSE
positive_matches = !is.na(positive_matches)
negative_matches = !is.na(negative_matches)
# final score
score = sum(positive_matches) - sum(negative_matches)
return(score)
}, positive_words, negative_words )
return(scores)
score = sentiment_scores(tweet, positives, negatives)
sentiment_scores = function(tweets, positive_words, negative_words){
scores = lapply(tweets,
function(tweet, positive_words, negative_words){
tweet = gsub("[[:punct:]]", "", tweet)    # remove punctuation
tweet = gsub("[[:cntrl:]]", "", tweet)   # remove control characters
tweet = gsub('\\d+', '', tweet)          # remove digits
# Let's have error handling function when trying tolower
tryTolower = function(x){
# create missing value
y = NA
# tryCatch error
try_error = tryCatch(tolower(x), error=function(e) e)
# if not an error
if (!inherits(try_error, "error"))
y = tolower(x)
# result
return(y)
}
# use tryTolower with sapply
tweet = sapply(tweet, tryTolower)
# split sentence into words with str_split function from stringr package
word_list = str_split(tweet, "\\s+")
words = unlist(word_list)
# compare words to the dictionaries of positive & negative terms
positive_matches = match(words, positive_words)
negative_matches = match(words, negative_words)
# get the position of the matched term or NA
# we just want a TRUE/FALSE
positive_matches = !is.na(positive_matches)
negative_matches = !is.na(negative_matches)
# final score
score = sum(positive_matches) - sum(negative_matches)
return(score)
}, positive_words, negative_words )
return(scores)
}
score = sentiment_scores(tweet, positives, negatives)
data$score=score
hist(data$score)
View(data)
hist(score)
data$score=cbind(data.frame(score))
hist(score)
hist(data$score)
View(data)
hist(score)
hist(as.numeric(score))
list1 <- searchTwitter(searchString = "#netDE",n=1500, since = '2016-05-10', until= '2016-05-11')
DE1Tweet=sapply(list1, function(x) x$getText())
DE1date=lapply(list1, function(x) x$getCreated())
DE1date=sapply(DE1date,function(x) strftime(x, format="%Y-%m-%d %H:%M:%S",tz = "UTC"))
isretweet1=sapply(list1, function(x) x$getIsRetweet())
retweeted1=sapply(list1, function(x) x$getRetweeted())
retweetcount1=sapply(list1, function(x) x$getRetweetCount())
favoritecount1=sapply(list1, function(x) x$getFavoriteCount())
favorited1=sapply(list1, function(x) x$getFavorited())
data=as.data.frame(cbind(tweet=DE1Tweet,date=DE1date,
isretweet=isretweet1,retweeted=retweeted1, retweetcount=retweetcount1,favoritecount=favoritecount1,favorited=favorited1))
list2 <- searchTwitter(searchString = "#netDE",n=1500, since = '2016-05-08', until= '2016-05-09')
DE2Tweet=sapply(list2, function(x) x$getText())
DE2date=lapply(list2, function(x) x$getCreated())
DE2date=sapply(DE2date,function(x) strftime(x, format="%Y-%m-%d %H:%M:%S",tz = "UTC"))
isretweet2=sapply(list2, function(x) x$getIsRetweet())
retweeted2=sapply(list2, function(x) x$getRetweeted())
retweetcount2=sapply(list2, function(x) x$getRetweetCount())
favoritecount2=sapply(list2, function(x) x$getFavoriteCount())
favorited2=sapply(list2, function(x) x$getFavorited())
data2=as.data.frame(cbind(tweet=DE2Tweet,date=DE2date,
isretweet=isretweet2,retweeted=retweeted2, retweetcount=retweetcount2,favoritecount=favoritecount2,favorited=favorited2))
list3 <- searchTwitter(searchString = "#netDE",n=1500, since = '2016-05-09', until= '2016-05-10')
DE3Tweet=sapply(list3, function(x) x$getText())
DE3date=lapply(list3, function(x) x$getCreated())
DE3date=sapply(DE3date,function(x) strftime(x, format="%Y-%m-%d %H:%M:%S",tz = "UTC"))
isretweet3=sapply(list3, function(x) x$getIsRetweet())
retweeted3=sapply(list3, function(x) x$getRetweeted())
retweetcount3=sapply(list3, function(x) x$getRetweetCount())
favoritecount3=sapply(list3, function(x) x$getFavoriteCount())
favorited3=sapply(list3, function(x) x$getFavorited())
data3=as.data.frame(cbind(tweet=DE3Tweet,date=DE3date,
isretweet=isretweet3,retweeted=retweeted3, retweetcount=retweetcount3,favoritecount=favoritecount3,favorited=favorited3))
list4 <- searchTwitter(searchString = "#netDE",n=1500, since = '2016-05-10', until= '2016-05-11')
DE4Tweet=sapply(list4, function(x) x$getText())
DE4date=lapply(list4, function(x) x$getCreated())
DE4date=sapply(DE4date,function(x) strftime(x, format="%Y-%m-%d %H:%M:%S",tz = "UTC"))
isretweet4=sapply(list4, function(x) x$getIsRetweet())
retweeted4=sapply(list4, function(x) x$getRetweeted())
retweetcount4=sapply(list4, function(x) x$getRetweetCount())
favoritecount4=sapply(list4, function(x) x$getFavoriteCount())
favorited4=sapply(list4, function(x) x$getFavorited())
data4=as.data.frame(cbind(tweet=DE4Tweet,date=DE4date,
isretweet=isretweet4,retweeted=retweeted4, retweetcount=retweetcount4,favoritecount=favoritecount4,favorited=favorited4))
list5 <- searchTwitter(searchString = "#netDE",n=1500, since = '2016-05-11', until= '2016-05-12')
DE5Tweet=sapply(list5, function(x) x$getText())
DE5date=lapply(list5, function(x) x$getCreated())
DE5date=sapply(DE5date,function(x) strftime(x, format="%Y-%m-%d %H:%M:%S",tz = "UTC"))
isretweet5=sapply(list5, function(x) x$getIsRetweet())
retweeted5=sapply(list5, function(x) x$getRetweeted())
retweetcount5=sapply(list5, function(x) x$getRetweetCount())
favoritecount5=sapply(list5, function(x) x$getFavoriteCount())
favorited5=sapply(list5, function(x) x$getFavorited())
data5=as.data.frame(cbind(tweet=DE5Tweet,date=DE5date,
isretweet=isretweet5,retweeted=retweeted5, retweetcount=retweetcount5,favoritecount=favoritecount5,favorited=favorited5))
list6 <- searchTwitter(searchString = "#netDE",n=1500, since = '2016-05-12', until= '2016-05-13')
DE6Tweet=sapply(list6, function(x) x$getText())
DE6date=lapply(list6, function(x) x$getCreated())
DE6date=sapply(DE6date,function(x) strftime(x, format="%Y-%m-%d %H:%M:%S",tz = "UTC"))
isretweet6=sapply(list6, function(x) x$getIsRetweet())
retweeted6=sapply(list6, function(x) x$getRetweeted())
retweetcount6=sapply(list6, function(x) x$getRetweetCount())
favoritecount6=sapply(list6, function(x) x$getFavoriteCount())
favorited6=sapply(list6, function(x) x$getFavorited())
data6=as.data.frame(cbind(tweet=DE6Tweet,date=DE6date,
isretweet=isretweet6,retweeted=retweeted6, retweetcount=retweetcount6,favoritecount=favoritecount6,favorited=favorited6))
list7 <- searchTwitter(searchString = "#netDE",n=1500, since = '2016-05-13', until= '2016-05-14')
DE7Tweet=sapply(list7, function(x) x$getText())
DE7date=lapply(list7, function(x) x$getCreated())
DE7date=sapply(DE7date,function(x) strftime(x, format="%Y-%m-%d %H:%M:%S",tz = "UTC"))
isretweet7=sapply(list7, function(x) x$getIsRetweet())
retweeted7=sapply(list7, function(x) x$getRetweeted())
retweetcount7=sapply(list7, function(x) x$getRetweetCount())
favoritecount7=sapply(list7, function(x) x$getFavoriteCount())
favorited7=sapply(list7, function(x) x$getFavorited())
data4=as.data.frame(cbind(tweet=DE7Tweet,date=DE7date,
isretweet=isretweet7,retweeted=retweeted7, retweetcount=retweetcount7,favoritecount=favoritecount7,favorited=favorited7))
data = rbind(data,data2,data3,data4,data5,data6,data7)
list1 <- searchTwitter(searchString = "#netDE",n=1500, since = '2016-05-10', until= '2016-05-11')
#connect all libraries
library(twitteR)
library(ROAuth)
library(plyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(tm)
library(wordcloud)
library(RColorBrewer)
require(RCurl)
list1 <- searchTwitter(searchString = "#netDE",n=1500, since = '2016-05-10', until= '2016-05-11')
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
list1 <- searchTwitter(searchString = "#netDE",n=1500, since = '2016-05-10', until= '2016-05-11')
DE1Tweet=sapply(list1, function(x) x$getText())
DE1date=lapply(list1, function(x) x$getCreated())
DE1date=sapply(DE1date,function(x) strftime(x, format="%Y-%m-%d %H:%M:%S",tz = "UTC"))
isretweet1=sapply(list1, function(x) x$getIsRetweet())
retweeted1=sapply(list1, function(x) x$getRetweeted())
retweetcount1=sapply(list1, function(x) x$getRetweetCount())
favoritecount1=sapply(list1, function(x) x$getFavoriteCount())
favorited1=sapply(list1, function(x) x$getFavorited())
data=as.data.frame(cbind(tweet=DE1Tweet,date=DE1date,
isretweet=isretweet1,retweeted=retweeted1, retweetcount=retweetcount1,favoritecount=favoritecount1,favorited=favorited1))
list2 <- searchTwitter(searchString = "#netDE",n=1500, since = '2016-05-08', until= '2016-05-09')
DE2Tweet=sapply(list2, function(x) x$getText())
DE2date=lapply(list2, function(x) x$getCreated())
DE2date=sapply(DE2date,function(x) strftime(x, format="%Y-%m-%d %H:%M:%S",tz = "UTC"))
isretweet2=sapply(list2, function(x) x$getIsRetweet())
retweeted2=sapply(list2, function(x) x$getRetweeted())
retweetcount2=sapply(list2, function(x) x$getRetweetCount())
favoritecount2=sapply(list2, function(x) x$getFavoriteCount())
favorited2=sapply(list2, function(x) x$getFavorited())
data2=as.data.frame(cbind(tweet=DE2Tweet,date=DE2date,
isretweet=isretweet2,retweeted=retweeted2, retweetcount=retweetcount2,favoritecount=favoritecount2,favorited=favorited2))
list3 <- searchTwitter(searchString = "#netDE",n=1500, since = '2016-05-09', until= '2016-05-10')
DE3Tweet=sapply(list3, function(x) x$getText())
DE3date=lapply(list3, function(x) x$getCreated())
DE3date=sapply(DE3date,function(x) strftime(x, format="%Y-%m-%d %H:%M:%S",tz = "UTC"))
isretweet3=sapply(list3, function(x) x$getIsRetweet())
retweeted3=sapply(list3, function(x) x$getRetweeted())
retweetcount3=sapply(list3, function(x) x$getRetweetCount())
favoritecount3=sapply(list3, function(x) x$getFavoriteCount())
favorited3=sapply(list3, function(x) x$getFavorited())
data3=as.data.frame(cbind(tweet=DE3Tweet,date=DE3date,
isretweet=isretweet3,retweeted=retweeted3, retweetcount=retweetcount3,favoritecount=favoritecount3,favorited=favorited3))
list4 <- searchTwitter(searchString = "#netDE",n=1500, since = '2016-05-10', until= '2016-05-11')
DE4Tweet=sapply(list4, function(x) x$getText())
DE4date=lapply(list4, function(x) x$getCreated())
DE4date=sapply(DE4date,function(x) strftime(x, format="%Y-%m-%d %H:%M:%S",tz = "UTC"))
isretweet4=sapply(list4, function(x) x$getIsRetweet())
retweeted4=sapply(list4, function(x) x$getRetweeted())
retweetcount4=sapply(list4, function(x) x$getRetweetCount())
favoritecount4=sapply(list4, function(x) x$getFavoriteCount())
favorited4=sapply(list4, function(x) x$getFavorited())
data4=as.data.frame(cbind(tweet=DE4Tweet,date=DE4date,
isretweet=isretweet4,retweeted=retweeted4, retweetcount=retweetcount4,favoritecount=favoritecount4,favorited=favorited4))
list5 <- searchTwitter(searchString = "#netDE",n=1500, since = '2016-05-11', until= '2016-05-12')
DE5Tweet=sapply(list5, function(x) x$getText())
DE5date=lapply(list5, function(x) x$getCreated())
DE5date=sapply(DE5date,function(x) strftime(x, format="%Y-%m-%d %H:%M:%S",tz = "UTC"))
isretweet5=sapply(list5, function(x) x$getIsRetweet())
retweeted5=sapply(list5, function(x) x$getRetweeted())
retweetcount5=sapply(list5, function(x) x$getRetweetCount())
favoritecount5=sapply(list5, function(x) x$getFavoriteCount())
favorited5=sapply(list5, function(x) x$getFavorited())
data5=as.data.frame(cbind(tweet=DE5Tweet,date=DE5date,
isretweet=isretweet5,retweeted=retweeted5, retweetcount=retweetcount5,favoritecount=favoritecount5,favorited=favorited5))
list6 <- searchTwitter(searchString = "#netDE",n=1500, since = '2016-05-12', until= '2016-05-13')
DE6Tweet=sapply(list6, function(x) x$getText())
DE6date=lapply(list6, function(x) x$getCreated())
DE6date=sapply(DE6date,function(x) strftime(x, format="%Y-%m-%d %H:%M:%S",tz = "UTC"))
isretweet6=sapply(list6, function(x) x$getIsRetweet())
retweeted6=sapply(list6, function(x) x$getRetweeted())
retweetcount6=sapply(list6, function(x) x$getRetweetCount())
favoritecount6=sapply(list6, function(x) x$getFavoriteCount())
favorited6=sapply(list6, function(x) x$getFavorited())
data6=as.data.frame(cbind(tweet=DE6Tweet,date=DE6date,
isretweet=isretweet6,retweeted=retweeted6, retweetcount=retweetcount6,favoritecount=favoritecount6,favorited=favorited6))
list7 <- searchTwitter(searchString = "#netDE",n=1500, since = '2016-05-13', until= '2016-05-14')
DE7Tweet=sapply(list7, function(x) x$getText())
DE7date=lapply(list7, function(x) x$getCreated())
DE7date=sapply(DE7date,function(x) strftime(x, format="%Y-%m-%d %H:%M:%S",tz = "UTC"))
isretweet7=sapply(list7, function(x) x$getIsRetweet())
retweeted7=sapply(list7, function(x) x$getRetweeted())
retweetcount7=sapply(list7, function(x) x$getRetweetCount())
favoritecount7=sapply(list7, function(x) x$getFavoriteCount())
favorited7=sapply(list7, function(x) x$getFavorited())
data4=as.data.frame(cbind(tweet=DE7Tweet,date=DE7date,
isretweet=isretweet7,retweeted=retweeted7, retweetcount=retweetcount7,favoritecount=favoritecount7,favorited=favorited7))
data = rbind(data,data2,data3,data4,data5,data6,data7)
data4=as.data.frame(cbind(tweet=DE4Tweet,date=DE4date,
isretweet=isretweet4,retweeted=retweeted4, retweetcount=retweetcount4,favoritecount=favoritecount4,favorited=favorited4))
data7=as.data.frame(cbind(tweet=DE7Tweet,date=DE7date,
isretweet=isretweet7,retweeted=retweeted7, retweetcount=retweetcount7,favoritecount=favoritecount7,favorited=favorited7))
data = rbind(data,data2,data3,data4,data5,data6,data7)
corpus=Corpus(VectorSource(data$tweet))
corpus=tm_map(corpus,tolower)
corpus=tm_map(corpus,function(x) removeWords(x,stopwords()))
corpus=tm_map(corpus,PlainTextDocument)
col=brewer.pal(6,"Dark2")
wordcloud(corpus, min.freq=10, scale=c(5,2),rot.per = 0.25,
random.color=T, max.word=45, random.order=F,colors=col)
corpus=Corpus(VectorSource(data$tweet))
corpus=tm_map(corpus,tolower)
corpus=Corpus(VectorSource(data$tweet))
View(data)
install.packages("SnowballC")
require(SnowballC)
corpus=tm_map(corpus,tolower)
corpus=Corpus(VectorSource(data$tweet))
corpus=tm_map(corpus,tolower,mc.cores=1)
data$tweets <- sapply(data$tweets,function(row) iconv(row, "latin1", "ASCII", sub=""))
data$tweet <- sapply(data$tweet,function(row) iconv(row, "latin1", "ASCII", sub=""))
corpus=Corpus(VectorSource(data$tweet))
corpus=tm_map(corpus,tolower,mc.cores=1)
corpus=tm_map(corpus,function(x) removeWords(x,stopwords()))
corpus=tm_map(corpus,PlainTextDocument)
col=brewer.pal(6,"Dark2")
wordcloud(corpus, min.freq=10, scale=c(5,2),rot.per = 0.25,
random.color=T, max.word=45, random.order=F,colors=col)
col=brewer.pal(6,"Dark2")
wordcloud(corpus, min.freq=10, scale=c(5,2),rot.per = 0.25,
random.color=T, max.word=45, random.order=F,colors=col)
